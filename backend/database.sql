  create table ghservers
  (
  ghserverid int unique not null,
  serveruri varchar(255) not null
  );

@@

  create table repos
  (
  rid int unique not null generated by default as identity (start with 1000, increment by 1),
  rname varchar(255) not null,
  ghserverid int not null,
  ownerid int not null,
  schedule int not null
  ) organize by row;

@@

  create table repotraffic
  (
  rid int,
  tdate date,
  viewcount int,
  vuniques int,
  clonecount int,
  cuniques int
  );

@@
  create table users
  (
  uid int unique not null generated by default as identity (start with 1000, increment by 1),
  fname varchar(100),
  lname varchar(100),
  email varchar(255),
  ghuser varchar(255) not null,
  ghtoken varchar(255) not null
  );

@@

  create table ghusers
  (
  uid int unique not null generated by default as identity (start with 1000, increment by 1),
  username varchar(255) not null,
  usertype char(1),
  email varchar(255),
  blog varchar(255)
  ) organize by row;

@@

  create table userrepos
  (
  uid int not null,
  rid int not null
  );

@@

  create table systemlog
  (
  uid int not null,
  completed timestamp,
  numrepos int,
  state varchar(100)
  );
@@

  create table adminusers
  (
  aid int unique not null generated by default as identity (start with 1000, increment by 1),
  auser varchar(255) not null,
  email varchar(255) not null
  );

@@
  create table adminroles
  (
  aid int not null,
  role int not null
  );

@@
  create table adminuserreporoles
  (
  aid int not null,
  uid int not null,
  role int not null,
  rid int
  );

@@
  create table adminrolevalues
  (
  role int unique not null,
  desc varchar(255) not null
  );

@@
  insert into adminrolevalues values (1,'admin'),(2,'sysmaint'),(4,'tenant'),(8,'tenantstats'),(16,'repostats');

@@
  create view v_adminuserrepos as
  (
  select ur.rid, au.aid,au.email, aurr.role from  adminuserreporoles aurr, adminusers au, adminroles ar, userrepos ur
  where ar.aid=au.aid
  and aurr.aid=au.aid
  and ur.uid=aurr.uid
  and (bitand(aurr.role,8)>0 or bitand(aurr.role,4)>0)
  union all
  select ur.rid, au.aid,au.email, aurr.role from  adminuserreporoles aurr, adminusers au, adminroles ar, userrepos ur
  where ar.aid=au.aid
  and aurr.aid=au.aid
  and ur.uid=aurr.uid
  and ur.rid=aurr.rid
  and (bitand(aurr.role,16)>0)
  );
@@

  create view v_repostats as (
  select r.rid, username as orgname, rname as reponame, tdate, viewcount, vuniques, clonecount, cuniques from repotraffic rt, ghusers gu, repos r where r.ownerid=gu.uid and rt.rid=r.rid
  );

@@
  create view v_adminrepolist as
  (
  select r.rid, gu.username as orgname, r.rname as reponame, v.email from ghusers gu, repos r, v_adminuserrepos v where r.ownerid=gu.uid and v.rid=r.rid
  );
